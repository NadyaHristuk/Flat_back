{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "API 17.0.0",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://flat-back.onrender.com/"
    },
    {
      "url": "http://localhost:3005"
    }
  ],
  "tags": [
    {
      "name": "UserAuth",
      "description": "Authorization and info endpoints"
    },
    {
      "name": "Personal-plan",
      "description": "Personal plan endpoints"
    },
    {
      "name": "Cashflow",
      "description": "Cashflow endpoints"
    },
    {
      "name": "Dynamics",
      "description": "Dynamics endpoints"
    }
  ],
  "paths": {
    "/api/user/register": {
      "post": {
        "tags": [
          "UserAuth"
        ],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/user/login": {
      "post": {
        "tags": [
          "UserAuth"
        ],
        "summary": "User authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email doesn't exist / Password is wrong",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/user/logout": {
      "get": {
        "tags": [
          "UserAuth"
        ],
        "summary": "Logout",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/user/addBalance": {
      "put": {
        "tags": [
          "UserAuth"
        ],
        "summary": "User authentication",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBalanceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBalanceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/user/info": {
      "get": {
        "tags": [
          "UserAuth"
        ],
        "summary": "Get current user info",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserInfo"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/personal-plan/pre": {
      "post": {
        "tags": [
          "Personal-plan"
        ],
        "summary": "Post personal plan",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Personal plan's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrePersonalPlanRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrePersonalPlanResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/personal-plan": {
      "post": {
        "tags": [
          "Personal-plan"
        ],
        "summary": "Post personal plan",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Personal plan's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonalPlanRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalPlanResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      },
      "get": {
        "tags": [
          "Personal-plan"
        ],
        "summary": "Get personal plan",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalPlanResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Personal-plan"
        ],
        "summary": "Post personal plan",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Personal plan's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonalPlanRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalPlanResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/personal-plan/daily-limit": {
      "get": {
        "tags": [
          "Personal-plan"
        ],
        "summary": "Get daily limit",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDailyLimit"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/cashflow/category": {
      "get": {
        "tags": [
          "Cashflow"
        ],
        "summary": "Get list of category",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/cashflow/presaving": {
      "get": {
        "tags": [
          "Cashflow"
        ],
        "summary": "Get totalByMounth, totalByDay, monthLimit, dailyLimit",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPresaving"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/cashflow": {
      "post": {
        "tags": [
          "Cashflow"
        ],
        "summary": "Post transaction",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Transaction's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CashflowRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactions"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      },
      "get": {
        "tags": [
          "Cashflow"
        ],
        "summary": "Get list of transactions",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "month",
            "schema": {
              "type": "string"
            },
            "description": "The month of transactions you want to get"
          },
          {
            "in": "query",
            "name": "year",
            "schema": {
              "type": "string"
            },
            "description": "The year of transactions you want to get"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CashflowResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/cashflow/{id}": {
      "delete": {
        "tags": [
          "Cashflow"
        ],
        "summary": "del one transaction",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "The Transaction ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashflowResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/cashflow/stat": {
      "get": {
        "tags": [
          "Cashflow"
        ],
        "summary": "Get list of category",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "format": "name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        },
        "example": {
          "name": "One",
          "email": "1@gmail.com"
        }
      },
      "LoginRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token"
          }
        },
        "example": {
          "token": "xxxxx.yyyyy.zzzzz"
        }
      },
      "AddBalanceRequest": {
        "required": [
          "balance"
        ],
        "type": "object",
        "properties": {
          "balance": {
            "type": "number",
            "description": "User's balance",
            "example": 100000
          }
        }
      },
      "AddBalanceResponse": {
        "type": "object",
        "properties": {
          "tbalance": {
            "type": "number",
            "description": "User's balance"
          }
        },
        "example": {
          "balance": 100000
        }
      },
      "GetUserInfo": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "balance": {
                "type": "number",
                "description": "User's balance"
              }
            }
          }
        },
        "example": {
          "name": "One",
          "email": "1@gmail.com",
          "balance": 100000
        }
      },
      "PrePersonalPlanRequest": {
        "type": "object",
        "required": [
          "salary",
          "passiveIncome",
          "savings",
          "cost",
          "footage",
          "procent"
        ],
        "properties": {
          "salary": {
            "type": "number",
            "description": "User's salary",
            "example": 30000
          },
          "passiveIncome": {
            "type": "number",
            "description": "User's passive income",
            "example": 30000
          },
          "savings": {
            "type": "number",
            "description": "User's savings",
            "example": 30000
          },
          "cost": {
            "type": "number",
            "description": "User's cost",
            "example": 30000
          },
          "footage": {
            "type": "number",
            "description": "User's footage",
            "example": 30000
          },
          "procent": {
            "type": "number",
            "description": "User's procent",
            "example": 30000
          }
        }
      },
      "PrePersonalPlanResponse": {
        "type": "object",
        "properties": {
          "salary": {
            "type": "number",
            "description": "User's salary"
          },
          "passiveIncome": {
            "type": "number",
            "description": "User's passive income"
          },
          "savings": {
            "type": "number",
            "description": "User's savings"
          },
          "cost": {
            "type": "number",
            "description": "User's cost"
          },
          "footage": {
            "type": "number",
            "description": "User's footage"
          },
          "procent": {
            "type": "number",
            "description": "User's procent"
          }
        },
        "example": {
          "salary": 30000,
          "passiveIncome": 30000,
          "savings": 30000,
          "cost": 30000,
          "footage": 30000,
          "procent": 30000,
          "year": 30000,
          "month": 30000
        }
      },
      "PersonalPlanRequest": {
        "type": "object",
        "required": [
          "salary",
          "passiveIncome",
          "savings",
          "cost",
          "footage",
          "procent"
        ],
        "properties": {
          "salary": {
            "type": "number",
            "description": "User's salary",
            "example": 30000
          },
          "passiveIncome": {
            "type": "number",
            "description": "User's passive income",
            "example": 30000
          },
          "savings": {
            "type": "number",
            "description": "User's savings",
            "example": 30000
          },
          "cost": {
            "type": "number",
            "description": "User's cost",
            "example": 30000
          },
          "footage": {
            "type": "number",
            "description": "User's footage",
            "example": 30000
          },
          "procent": {
            "type": "number",
            "description": "User's procent",
            "example": 30000
          }
        }
      },
      "PersonalPlanResponse": {
        "type": "object",
        "properties": {
          "salary": {
            "type": "number",
            "description": "User's salary"
          },
          "passiveIncome": {
            "type": "number",
            "description": "User's passive income"
          },
          "savings": {
            "type": "number",
            "description": "User's savings"
          },
          "cost": {
            "type": "number",
            "description": "User's cost"
          },
          "footage": {
            "type": "number",
            "description": "User's footage"
          },
          "procent": {
            "type": "number",
            "description": "User's procent"
          },
          "_id": {
            "type": "string"
          },
          "__v": {
            "type": "number"
          }
        },
        "example": {
          "salary": 30000,
          "passiveIncome": 30000,
          "savings": 30000,
          "cost": 30000,
          "footage": 30000,
          "procent": 30000,
          "year": 30000,
          "month": 30000,
          "_id": "62ff62db76172b42dd276f3a",
          "__v": 0
        }
      },
      "GetDailyLimit": {
        "type": "object",
        "properties": {
          "monthLimit": {
            "type": "number",
            "description": "User's monthLimit"
          },
          "dailyLimit": {
            "type": "number",
            "description": "User's dailyLimit"
          }
        },
        "example": {
          "monthLimit": 30,
          "dailyLimit": 300
        }
      },
      "GetPresaving": {
        "type": "object",
        "properties": {
          "monthLimit": {
            "type": "number",
            "description": "User's monthLimit"
          },
          "dailyLimit": {
            "type": "number",
            "description": "User's dailyLimit"
          },
          "totalByMounth": {
            "type": "number",
            "description": "User's totalByMounth"
          },
          "totalByDay": {
            "type": "number",
            "description": "User's totalByDay"
          }
        },
        "example": {
          "monthLimit": 30,
          "dailyLimit": 300,
          "totalByMounth": 30,
          "totalByDay": 300
        }
      },
      "CashflowRequest": {
        "type": "object",
        "required": [
          "type",
          "category",
          "coment",
          "sum"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "User's type of cashflow",
            "example": "income"
          },
          "category": {
            "type": "string",
            "description": "User's category of cashflow",
            "example": "Products"
          },
          "coment": {
            "type": "string",
            "description": "User's coment of cashflow",
            "example": "milk"
          },
          "sum": {
            "type": "number",
            "description": "User's sum of cashflow",
            "example": 30000
          }
        }
      },
      "CashflowResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "User's type of cashflow"
          },
          "category": {
            "type": "string",
            "description": "User's category of cashflow"
          },
          "coment": {
            "type": "string",
            "description": "User's coment of cashflow"
          },
          "sum": {
            "type": "number",
            "description": "User's sum of cashflow"
          },
          "date": {
            "type": "string"
          },
          "_id": {
            "type": "string"
          },
          "__v": {
            "type": "number"
          }
        },
        "example": {
          "type": "expense",
          "category": "Products",
          "coment": "milk",
          "sum": 30000,
          "date": "2022-08-21T20:50:38.508Z",
          "_id": "62ff62db76172b42dd276f3a",
          "__v": 0
        }
      },
      "GetTransactions": {
        "type": "object",
        "properties": {
          "notice": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "category": {
                  "type": "string",
                  "description": "User's category of cashflow"
                },
                "coment": {
                  "type": "string",
                  "description": "User's coment of cashflow"
                },
                "sum": {
                  "type": "number",
                  "description": "User's sum of cashflow"
                },
                "date": {
                  "type": "string"
                },
                "_id": {
                  "type": "string"
                },
                "__v": {
                  "type": "number"
                }
              }
            }
          }
        },
        "example": {
          "type": "expense",
          "category": "Products",
          "coment": "milk",
          "sum": 30000,
          "date": "2022-08-21T20:50:38.508Z",
          "_id": "62ff62db76172b42dd276f3a",
          "__v": 0
        }
      },
      "CategoryResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name of category"
          },
          "title": {
            "type": "string",
            "description": "title of category"
          }
        },
        "example": {
          "name": "products",
          "title": "Products"
        }
      },
      "StatResponse": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "name of category"
          },
          "amount": {
            "type": "number",
            "description": "title of category"
          }
        },
        "example": {
          "category": "products",
          "amount": 1000
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}